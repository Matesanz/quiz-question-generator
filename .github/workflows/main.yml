name: Python Semantic Release

permissions:
  id-token: write
  contents: write

on:
  push:
    branches:
      - 'main'

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout Repository
        uses: actions/checkout@v4

      - name: Setup | Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.8'

      - name: Setup | Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry==2.1.1
          poetry config virtualenvs.create false && poetry install

      - name: Action | Run pre-commit
        run: pre-commit run --all-files

      - name: Action | Run Tests
        run: pytest tests/

  release:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Setup | Checkout Repository on Release Branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0

      - name: Setup | Force release branch to be at workflow sha
        run: |
          git reset --hard ${{ github.sha }}

      - name: Action | Semantic Version Release
        id: release
        uses: python-semantic-release/python-semantic-release@v9.21.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          git_committer_name: "github-actions"
          git_committer_email: "actions@users.noreply.github.com"

  build-and-push:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/quiz-question-generator:latest
